services:
  crc-alerts-service:
    build:
      context: .
    container_name: crc-alerts-service
    command: npm run migration:run
#    depends_on:
#      - crc-alerts-migrations
    env_file:
      - .env

#  crc-alerts-migrations:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: crc-alerts-migrations
#    command: npm run migration:run && node dist/src/main.js
#    depends_on:
#      - crc-alerts-db
#    env_file:
#      - .env

  crc-alerts-db:
    image: timescale/timescaledb:latest-pg15
    container_name: crc-alerts-db
    restart: always
    volumes:
      - crc-alerts-volume:/home/postgres/pgdata/data
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DATABASE=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

networks:
  default:
    name: crc-network
    external: true

volumes:
  crc-alerts-volume:
    name: crc-alerts-volume
