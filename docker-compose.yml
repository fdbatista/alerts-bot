services:
  crc-alerts-service:
    build:
      context: .
    container_name: crc-alerts-service
    restart: always
    depends_on:
      - crc-alerts-db
    env_file:
      - .env.production

  crc-alerts-db:
    image: timescale/timescaledb:latest-pg15
    container_name: crc-alerts-db
    restart: always
    volumes:
      - ./docker/pg:/var/lib/postgresql/data
    env_file:
      - .env.production
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DATABASE=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  crc-alerts-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: crc-alerts-pgadmin
    restart: always
    depends_on:
      - crc-alerts-db
    env_file:
      - .env.production
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - crc-alerts-pgadmin-volume:/var/lib/pgadmin

networks:
  default:
    name: crc-network
    external: true

volumes:
  crc-alerts-pgadmin-volume:
